# -*- coding: utf-8 -*-
"""BetaCalculation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Wq-I621evB4LQSeM_-wkHQrUGy-VOUT0
"""

#install the dependencies
import yfinance as yf
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
import datetime as dt

#Define time period
start_date = dt.datetime(2022, 1, 1)
end_date = dt.datetime(2025, 1, 1)

#Download adjusted close prices
tickers = ['MSFT', 'SPY']
data = yf.download(tickers, start=start_date, end=end_date)['Close']

#Compute daily returns
returns = data.pct_change().dropna()

#Define variables
x = returns['SPY'].values.reshape(-1, 1)   # Market (SPY)
y = returns['MSFT'].values.reshape(-1, 1)  # Stock (MSFT)

#Fit linear regression
model = LinearRegression().fit(x, y)
beta = model.coef_[0][0]
alpha = model.intercept_[0]
r_squared = model.score(x, y)

#Print results
print(f"Alpha: {alpha:.6f}")
print(f"Beta:  {beta:.4f}")
print(f"R-squared: {r_squared:.4f}")

#Plot regression line and scatter
plt.figure(figsize=(8,6))
plt.scatter(x, y, alpha=0.5, label='Daily Returns', s=10)
plt.plot(x, model.predict(x), color='red', label=f'Regression Line (Î²={beta:.2f})')
plt.title('MSFT vs SPY Daily Returns Regression')
plt.xlabel('SPY Daily Returns')
plt.ylabel('MSFT Daily Returns')
plt.legend()
plt.grid(True, linestyle='--', alpha=0.6)
plt.tight_layout()
plt.show()

